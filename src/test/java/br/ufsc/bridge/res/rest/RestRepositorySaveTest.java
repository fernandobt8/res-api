package br.ufsc.bridge.res.rest;

import static br.ufsc.bridge.res.domain.TipoDocumento.REGISTRO_ATENDIMENTO_CLINICO;
import static br.ufsc.bridge.res.domain.TipoDocumento.SUMARIO_ALTA;
import static junit.framework.TestCase.assertEquals;
import static org.hamcrest.CoreMatchers.hasItem;
import static org.hamcrest.CoreMatchers.not;
import static org.hamcrest.MatcherAssert.assertThat;

import java.security.KeyManagementException;
import java.security.NoSuchAlgorithmException;
import java.util.Date;
import java.util.List;

import javax.net.ssl.SSLContext;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

import br.ufsc.bridge.res.domain.Sort;
import br.ufsc.bridge.res.domain.TipoDocumento;
import br.ufsc.bridge.res.service.rest.repository.RestRepositoryService;
import br.ufsc.bridge.res.service.rest.repository.dto.ItemDTO;
import br.ufsc.bridge.res.service.rest.repository.dto.SaveDTO;

@RunWith(JUnit4.class)
public class RestRepositorySaveTest {

	private SaveDTO dto;

	private RestRepositoryService service;

	private static final String URL = "https://ehr-services.rnds.mbamobi.com.br/ehr-services/fhir/r4/DocumentReference";

	private static final String PROFISSIONAL = "PractitionerRole/207285845860006-2008920";

	private static final String UNIDADE = "Organization/0011606";

	private static final String PACIENTE = "Patient/712176901347489";

	@Before
	public void setup() throws KeyManagementException, NoSuchAlgorithmException {
		this.service = new RestRepositoryService(URL);
		this.dto = SaveDTO.builder()
				.data(new Date())
				.pacienteId(PACIENTE)
				.unidadeId(UNIDADE)
				.profissionalId(PROFISSIONAL)
				.documento(this.DATA_REGISTRO_ATENDIMENTO)
				.tipoDocumento(REGISTRO_ATENDIMENTO_CLINICO)
				.build();
	}

	@Test
	public void save() {
		String uuid = this.service.save(this.dto, "93529285348", "");
		Assert.assertNotNull(uuid);
	}

	@Test
	public void readRegistroAtendimento() {
		// given
		String uuid = this.service.save(this.dto, "", "03393946412");

		// when
		SaveDTO dto = this.service.read(uuid, "", "03393946412");

		// then
		assertEquals(this.DATA_REGISTRO_ATENDIMENTO, dto.getDocumento());
		assertEquals(PACIENTE, dto.getPacienteId());
		assertEquals(PROFISSIONAL, dto.getProfissionalId());
		assertEquals(UNIDADE, dto.getUnidadeId());

	}

	@Test
	public void readRegistroVacina() {
		// given
		this.dto.setTipoDocumento(TipoDocumento.REGISTRO_IMUNOBIOLOGICO);
		this.dto.setDocumento(this.DATA_REGISTRO_IMUNOBIOLOGICO);
		String uuid = this.service.save(this.dto, "", "03393946412");

		// when
		SaveDTO dto = this.service.read(uuid, "", "03393946412");

		// then
		assertEquals(this.DATA_REGISTRO_IMUNOBIOLOGICO, dto.getDocumento());
		assertEquals(PACIENTE, dto.getPacienteId());
		assertEquals(PROFISSIONAL, dto.getProfissionalId());
		assertEquals(UNIDADE, dto.getUnidadeId());
		assertEquals(TipoDocumento.REGISTRO_IMUNOBIOLOGICO, dto.getTipoDocumento());

	}

	@Test
	public void listAsc() throws KeyManagementException, NoSuchAlgorithmException {
		// given
		String uuid1 = this.service.save(this.dto, "", "03393946412");
		String uuid2 = this.service.save(this.dto, "", "03393946412");
		SSLContext context = SSLContext.getInstance("TLSv1.2");
		context.init(null, null, null);
		SSLContext.setDefault(context);
		// when
		List<ItemDTO> result = this.service.list(PACIENTE, Sort.ASC, "", "03393946412");

		// then
		assertThat(result, not(hasItem(new ItemDTO(uuid1, URL + "/" + uuid1, SUMARIO_ALTA))));
		assertThat(result, not(hasItem(new ItemDTO(uuid2, URL + "/" + uuid2, SUMARIO_ALTA))));
	}

	@Test
	public void listDesc() throws InterruptedException, KeyManagementException, NoSuchAlgorithmException {
		// given
		String uuid1 = this.service.save(this.dto, "", "03393946412");
		String uuid2 = this.service.save(this.dto, "", "03393946412");
		SSLContext context = SSLContext.getInstance("TLSv1.2");
		context.init(null, null, null);
		SSLContext.setDefault(context);

		// when
		List<ItemDTO> result = this.service.list(PACIENTE, Sort.DESC, "", "03393946412");

		// then
		//		assertThat(result, hasItem(new ItemDTO(uuid1, URL + "/" + uuid1, SUMARIO_ALTA)));
		//		assertThat(result, hasItem(new ItemDTO(uuid2, URL + "/" + uuid2, SUMARIO_ALTA)));
	}

	private final String DATA_REGISTRO_ATENDIMENTO =
			"";

	private final String DATA_REGISTRO_IMUNOBIOLOGICO = "ewogICJfYXJjaGV0eXBlX25vZGVfaWQiOiAib3BlbkVIUi1FSFItQ09NUE9TSVRJT04uZXZlbnRfc3VtbWFyeS52MCIsCiAgIm5hbWUiOiB7CiAgICAidmFsdWUiOiAiUmVnaXN0cm8gZGUgSW11bm9iaW9sw7NnaWNvIgogIH0sCiAgInVpZCI6IHsKICAgICJfdHlwZSI6ICJPQkpFQ1RfVkVSU0lPTl9JRCIsCiAgICAidmFsdWUiOiAiZGRmNGRkMWUtMDdhZS00MzcyLWJjYjQtYjdkNDA1MDQwMjk4OjpleGFtcGxlLmV0aGVyY2lzLmNvbTo6MSIKICB9LAogICJhcmNoZXR5cGVfZGV0YWlscyI6IHsKICAgICJhcmNoZXR5cGVfaWQiOiB7CiAgICAgICJ2YWx1ZSI6ICJvcGVuRUhSLUVIUi1DT01QT1NJVElPTi5ldmVudF9zdW1tYXJ5LnYwIgogICAgfSwKICAgICJ0ZW1wbGF0ZV9pZCI6IHsKICAgICAgInZhbHVlIjogIlJlZ2lzdHJvSW11bm9iaW9sb2dpY29fdjMiCiAgICB9LAogICAgInJtX3ZlcnNpb24iOiAiMS4wLjEiCiAgfSwKICAibGFuZ3VhZ2UiOiB7CiAgICAidGVybWlub2xvZ3lfaWQiOiB7CiAgICAgICJ2YWx1ZSI6ICJJU09fNjM5LTEiCiAgICB9LAogICAgImNvZGVfc3RyaW5nIjogImVuIgogIH0sCiAgInRlcnJpdG9yeSI6IHsKICAgICJ0ZXJtaW5vbG9neV9pZCI6IHsKICAgICAgInZhbHVlIjogIklTT18zMTY2LTEiCiAgICB9LAogICAgImNvZGVfc3RyaW5nIjogIkdCIgogIH0sCiAgImNhdGVnb3J5IjogewogICAgInZhbHVlIjogImV2ZW50IiwKICAgICJkZWZpbmluZ19jb2RlIjogewogICAgICAidGVybWlub2xvZ3lfaWQiOiB7CiAgICAgICAgInZhbHVlIjogIm9wZW5laHIiCiAgICAgIH0sCiAgICAgICJjb2RlX3N0cmluZyI6ICI0MzMiCiAgICB9CiAgfSwKICAiY29tcG9zZXIiOiB7CiAgICAiX3R5cGUiOiAiUEFSVFlfSURFTlRJRklFRCIsCiAgICAiZXh0ZXJuYWxfcmVmIjogewogICAgICAiaWQiOiB7CiAgICAgICAgIl90eXBlIjogIkdFTkVSSUNfSUQiLAogICAgICAgICJ2YWx1ZSI6ICIxMjM0LTU2NzgiLAogICAgICAgICJzY2hlbWUiOiAiRVRIRVJDSVMtVEVTVCIKICAgICAgfSwKICAgICAgIm5hbWVzcGFjZSI6ICJERU1PR1JBUEhJQyIsCiAgICAgICJ0eXBlIjogIlBBUlRZIgogICAgfSwKICAgICJuYW1lIjogIkNvbXBvc2VyIiwKICAgICJpZGVudGlmaWVycyI6IHsKICAgICAgImlzc3VlciI6ICJFVEhFUkNJUyIsCiAgICAgICJhc3NpZ25lciI6ICJkdW1teSIsCiAgICAgICJpZCI6ICIxMjM0LTU2NzgiLAogICAgICAidHlwZSI6ICJkdW1teSIKICAgIH0KICB9LAogICJjb250ZXh0IjogewogICAgInN0YXJ0X3RpbWUiOiB7CiAgICAgICJ2YWx1ZSI6ICIyMDE5LTA5LTEzVDE1OjIxOjA0LjMyOVoiCiAgICB9LAogICAgImxvY2F0aW9uIjogIlRFU1QgTEFCIiwKICAgICJzZXR0aW5nIjogewogICAgICAidmFsdWUiOiAiT3RoZXIgQ2FyZSIsCiAgICAgICJkZWZpbmluZ19jb2RlIjogewogICAgICAgICJ0ZXJtaW5vbG9neV9pZCI6IHsKICAgICAgICAgICJ2YWx1ZSI6ICJvcGVuZWhyIgogICAgICAgIH0sCiAgICAgICAgImNvZGVfc3RyaW5nIjogIjIzOCIKICAgICAgfQogICAgfSwKICAgICJoZWFsdGhfY2FyZV9mYWNpbGl0eSI6IHsKICAgICAgImV4dGVybmFsX3JlZiI6IHsKICAgICAgICAiaWQiOiB7CiAgICAgICAgICAiX3R5cGUiOiAiR0VORVJJQ19JRCIsCiAgICAgICAgICAidmFsdWUiOiAiMTIzNDU2LTEyMyIsCiAgICAgICAgICAic2NoZW1lIjogIkVUSEVSQ0lTLVNDSEVNRSIKICAgICAgICB9LAogICAgICAgICJuYW1lc3BhY2UiOiAiREVNT0dSQVBISUMiLAogICAgICAgICJ0eXBlIjogIlBBUlRZIgogICAgICB9LAogICAgICAibmFtZSI6ICJGQUNJTElUWSIKICAgIH0KICB9LAogICJjb250ZW50IjogWwogICAgewogICAgICAiX2FyY2hldHlwZV9ub2RlX2lkIjogIm9wZW5FSFItRUhSLVNFQ1RJT04uYWRob2MudjEiLAogICAgICAiX3R5cGUiOiAiU0VDVElPTiIsCiAgICAgICJuYW1lIjogewogICAgICAgICJ2YWx1ZSI6ICJDYXJhY3Rlcml6YcOnw6NvIGRvIGF0ZW5kaW1lbnRvIgogICAgICB9LAogICAgICAiYXJjaGV0eXBlX2RldGFpbHMiOiB7CiAgICAgICAgImFyY2hldHlwZV9pZCI6IHsKICAgICAgICAgICJ2YWx1ZSI6ICJvcGVuRUhSLUVIUi1TRUNUSU9OLmFkaG9jLnYxIgogICAgICAgIH0sCiAgICAgICAgInJtX3ZlcnNpb24iOiAiMS4wLjEiCiAgICAgIH0sCiAgICAgICJpdGVtcyI6IHsKICAgICAgICAiX2FyY2hldHlwZV9ub2RlX2lkIjogIm9wZW5FSFItRUhSLUFETUlOX0VOVFJZLmFkbWlzc2lvbi1tc19ici52MSIsCiAgICAgICAgIl90eXBlIjogIkFETUlOX0VOVFJZIiwKICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICJ2YWx1ZSI6ICJBZG1pc3PDo28gZG8gcGFjaWVudGUiCiAgICAgICAgfSwKICAgICAgICAiYXJjaGV0eXBlX2RldGFpbHMiOiB7CiAgICAgICAgICAiYXJjaGV0eXBlX2lkIjogewogICAgICAgICAgICAidmFsdWUiOiAib3BlbkVIUi1FSFItQURNSU5fRU5UUlkuYWRtaXNzaW9uLW1zX2JyLnYxIgogICAgICAgICAgfSwKICAgICAgICAgICJ0ZW1wbGF0ZV9pZCI6IHsKICAgICAgICAgICAgInZhbHVlIjogIlJlZ2lzdHJvSW11bm9iaW9sb2dpY29fdjMiCiAgICAgICAgICB9LAogICAgICAgICAgInJtX3ZlcnNpb24iOiAiMS4wLjEiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiB7CiAgICAgICAgICAidGVybWlub2xvZ3lfaWQiOiB7CiAgICAgICAgICAgICJ2YWx1ZSI6ICJJU09fNjM5LTEiCiAgICAgICAgICB9LAogICAgICAgICAgImNvZGVfc3RyaW5nIjogImVuIgogICAgICAgIH0sCiAgICAgICAgImVuY29kaW5nIjogewogICAgICAgICAgInRlcm1pbm9sb2d5X2lkIjogewogICAgICAgICAgICAidmFsdWUiOiAiSUFOQV9jaGFyYWN0ZXItc2V0cyIKICAgICAgICAgIH0sCiAgICAgICAgICAiY29kZV9zdHJpbmciOiAiVVRGLTgiCiAgICAgICAgfSwKICAgICAgICAic3ViamVjdCI6IHsKICAgICAgICAgICJfdHlwZSI6ICJQQVJUWV9TRUxGIgogICAgICAgIH0sCiAgICAgICAgImRhdGEiOiB7CiAgICAgICAgICAiX2FyY2hldHlwZV9ub2RlX2lkIjogImF0MDAwMSIsCiAgICAgICAgICAiX3R5cGUiOiAiSVRFTV9UUkVFIiwKICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAidmFsdWUiOiAiVHJlZSIKICAgICAgICAgIH0sCiAgICAgICAgICAiaXRlbXMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAiX2FyY2hldHlwZV9ub2RlX2lkIjogImF0MDA3MyIsCiAgICAgICAgICAgICAgIl90eXBlIjogIkNMVVNURVIiLAogICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgInZhbHVlIjogIkxvY2FsaXphw6fDo28gYXRyaWJ1w61kYSBhbyBwYWNpZW50ZSIKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJpdGVtcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgIl9hcmNoZXR5cGVfbm9kZV9pZCI6ICJhdDAwNzQuMSIsCiAgICAgICAgICAgICAgICAgICJfdHlwZSI6ICJFTEVNRU5UIiwKICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogIkxvY2FsIGRlIGF0ZW5kaW1lbnRvIgogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAidmFsdWUiOiB7CiAgICAgICAgICAgICAgICAgICAgIl90eXBlIjogIkRWX0NPREVEX1RFWFQiLAogICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJVbmlkYWRlIGLDoXNpY2EgZGUgc2HDumRlIChVQlMpIiwKICAgICAgICAgICAgICAgICAgICAiZGVmaW5pbmdfY29kZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICJ0ZXJtaW5vbG9neV9pZCI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImxvY2FsIgogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICJjb2RlX3N0cmluZyI6ICJhdDAuMTQ4IgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgIl9hcmNoZXR5cGVfbm9kZV9pZCI6ICJhdDAxMDQiLAogICAgICAgICAgICAgICAgICAiX3R5cGUiOiAiQ0xVU1RFUiIsCiAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJJbnN0aXR1acOnw6NvIgogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAiaXRlbXMiOiBbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgIl9hcmNoZXR5cGVfbm9kZV9pZCI6ICJhdDAuMTU4IiwKICAgICAgICAgICAgICAgICAgICAgICJfdHlwZSI6ICJFTEVNRU5UIiwKICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiQ05FUyIKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJfdHlwZSI6ICJEVl9URVhUIiwKICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogIjI0Mjk4MzciCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAiX2FyY2hldHlwZV9ub2RlX2lkIjogImF0MC4xNTkiLAogICAgICAgICAgICAgICAgICAgICAgIl90eXBlIjogIkVMRU1FTlQiLAogICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJJTkUiCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogewogICAgICAgICAgICAgICAgICAgICAgICAiX3R5cGUiOiAiRFZfVEVYVCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICIwMDAwMTUxMzAwIgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICJfYXJjaGV0eXBlX25vZGVfaWQiOiAiYXQwMTIxIiwKICAgICAgICAgICAgICAiX3R5cGUiOiAiQ0xVU1RFUiIsCiAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAidmFsdWUiOiAiTcOpZGljbyBkYSBjb25zdWx0YSIKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJpdGVtcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgIl9hcmNoZXR5cGVfbm9kZV9pZCI6ICJhdDAwOTkiLAogICAgICAgICAgICAgICAgICAiX3R5cGUiOiAiRUxFTUVOVCIsCiAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJOb21lIGRvIHByb2Zpc3Npb25hbCByZXNwb25zw6F2ZWwiCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6IHsKICAgICAgICAgICAgICAgICAgICAiX3R5cGUiOiAiRFZfVEVYVCIsCiAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogIkNBTUlMQSBERSBTT1VaQSBCQVJCT1NBIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAiX2FyY2hldHlwZV9ub2RlX2lkIjogImF0MC4xNjUiLAogICAgICAgICAgICAgICAgICAiX3R5cGUiOiAiRUxFTUVOVCIsCiAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJDTlMgZG8gcHJvZmlzc2lvbmFsIHJlc3BvbnPDoXZlbCIKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgInZhbHVlIjogewogICAgICAgICAgICAgICAgICAgICJfdHlwZSI6ICJEVl9URVhUIiwKICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiNzAxMjA2MDk0NTg2MDE5IgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAiX2FyY2hldHlwZV9ub2RlX2lkIjogImF0MC4xNjYiLAogICAgICAgICAgICAgICAgICAiX3R5cGUiOiAiRUxFTUVOVCIsCiAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJDQk8iCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6IHsKICAgICAgICAgICAgICAgICAgICAiX3R5cGUiOiAiRFZfVEVYVCIsCiAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogIjIyNTE0MiIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICJfYXJjaGV0eXBlX25vZGVfaWQiOiAiYXQwMDcxIiwKICAgICAgICAgICAgICAiX3R5cGUiOiAiRUxFTUVOVCIsCiAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAidmFsdWUiOiAiSG9yYSBkbyBhdGVuZGltZW50byIKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJ2YWx1ZSI6IHsKICAgICAgICAgICAgICAgICJfdHlwZSI6ICJEVl9EQVRFX1RJTUUiLAogICAgICAgICAgICAgICAgInZhbHVlIjogIjIwMTktMDktMTNUMTQ6NTQ6MDJaIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIHsKICAgICAgIl9hcmNoZXR5cGVfbm9kZV9pZCI6ICJvcGVuRUhSLUVIUi1TRUNUSU9OLmltbXVuaXNhdGlvbl9saXN0LnYwIiwKICAgICAgIl90eXBlIjogIlNFQ1RJT04iLAogICAgICAibmFtZSI6IHsKICAgICAgICAidmFsdWUiOiAiUmVnaXN0cm8gZGEgaW11bml6YcOnw6NvIgogICAgICB9LAogICAgICAiYXJjaGV0eXBlX2RldGFpbHMiOiB7CiAgICAgICAgImFyY2hldHlwZV9pZCI6IHsKICAgICAgICAgICJ2YWx1ZSI6ICJvcGVuRUhSLUVIUi1TRUNUSU9OLmltbXVuaXNhdGlvbl9saXN0LnYwIgogICAgICAgIH0sCiAgICAgICAgInJtX3ZlcnNpb24iOiAiMS4wLjEiCiAgICAgIH0sCiAgICAgICJpdGVtcyI6IFsKICAgICAgICB7CiAgICAgICAgICAiX2FyY2hldHlwZV9ub2RlX2lkIjogIm9wZW5FSFItRUhSLUFDVElPTi5tZWRpY2F0aW9uLnYxIiwKICAgICAgICAgICJfdHlwZSI6ICJBQ1RJT04iLAogICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICJ2YWx1ZSI6ICJHZXN0w6NvIGRlIG1lZGljYcOnw6NvIgogICAgICAgICAgfSwKICAgICAgICAgICJhcmNoZXR5cGVfZGV0YWlscyI6IHsKICAgICAgICAgICAgImFyY2hldHlwZV9pZCI6IHsKICAgICAgICAgICAgICAidmFsdWUiOiAib3BlbkVIUi1FSFItQUNUSU9OLm1lZGljYXRpb24udjEiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJybV92ZXJzaW9uIjogIjEuMC4xIgogICAgICAgICAgfSwKICAgICAgICAgICJsYW5ndWFnZSI6IHsKICAgICAgICAgICAgInRlcm1pbm9sb2d5X2lkIjogewogICAgICAgICAgICAgICJ2YWx1ZSI6ICJJU09fNjM5LTEiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJjb2RlX3N0cmluZyI6ICJlbiIKICAgICAgICAgIH0sCiAgICAgICAgICAiZW5jb2RpbmciOiB7CiAgICAgICAgICAgICJ0ZXJtaW5vbG9neV9pZCI6IHsKICAgICAgICAgICAgICAidmFsdWUiOiAiSUFOQV9jaGFyYWN0ZXItc2V0cyIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImNvZGVfc3RyaW5nIjogIlVURi04IgogICAgICAgICAgfSwKICAgICAgICAgICJzdWJqZWN0IjogewogICAgICAgICAgICAiX3R5cGUiOiAiUEFSVFlfU0VMRiIKICAgICAgICAgIH0sCiAgICAgICAgICAidGltZSI6IHsKICAgICAgICAgICAgInZhbHVlIjogIjIwMTktMDktMTNUMDA6MDA6MDBaIgogICAgICAgICAgfSwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6IHsKICAgICAgICAgICAgIl9hcmNoZXR5cGVfbm9kZV9pZCI6ICJhdDAwMTciLAogICAgICAgICAgICAiX3R5cGUiOiAiSVRFTV9UUkVFIiwKICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgInZhbHVlIjogIlRyZWUiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJpdGVtcyI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiX2FyY2hldHlwZV9ub2RlX2lkIjogIm9wZW5FSFItRUhSLUNMVVNURVIubWVkaWNhdGlvbi52MSIsCiAgICAgICAgICAgICAgICAiX3R5cGUiOiAiQ0xVU1RFUiIsCiAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgInZhbHVlIjogIk1lZGljYW1lbnRvIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJhcmNoZXR5cGVfZGV0YWlscyI6IHsKICAgICAgICAgICAgICAgICAgImFyY2hldHlwZV9pZCI6IHsKICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAib3BlbkVIUi1FSFItQ0xVU1RFUi5tZWRpY2F0aW9uLnYxIgogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAicm1fdmVyc2lvbiI6ICIxLjAuMSIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiaXRlbXMiOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiX2FyY2hldHlwZV9ub2RlX2lkIjogImF0MDEzMiIsCiAgICAgICAgICAgICAgICAgICAgIl90eXBlIjogIkVMRU1FTlQiLAogICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogIkltdW5vYmlvbMOzZ2ljbyIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICJfdHlwZSI6ICJEVl9URVhUIiwKICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJCQ0ciCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIl9hcmNoZXR5cGVfbm9kZV9pZCI6ICJhdDAxNTEiLAogICAgICAgICAgICAgICAgICAgICJfdHlwZSI6ICJFTEVNRU5UIiwKICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJGYWJyaWNhbnRlIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogewogICAgICAgICAgICAgICAgICAgICAgIl90eXBlIjogIkRWX1RFWFQiLAogICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogIkZJT0NSVVoiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIl9hcmNoZXR5cGVfbm9kZV9pZCI6ICJhdDAxNTAiLAogICAgICAgICAgICAgICAgICAgICJfdHlwZSI6ICJFTEVNRU5UIiwKICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJMb3RlIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogewogICAgICAgICAgICAgICAgICAgICAgIl90eXBlIjogIkRWX1RFWFQiLAogICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogIjA3OFZGQTAzOVoiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIl9hcmNoZXR5cGVfbm9kZV9pZCI6ICJvcGVuRUhSLUVIUi1DTFVTVEVSLmRvc2FnZS52MSIsCiAgICAgICAgICAgICAgICAgICAgIl90eXBlIjogIkNMVVNURVIiLAogICAgICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogIkRvc2UiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAiYXJjaGV0eXBlX2RldGFpbHMiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiYXJjaGV0eXBlX2lkIjogewogICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAib3BlbkVIUi1FSFItQ0xVU1RFUi5kb3NhZ2UudjEiCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgInJtX3ZlcnNpb24iOiAiMS4wLjEiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAiaXRlbXMiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiX2FyY2hldHlwZV9ub2RlX2lkIjogImF0MDE3OCIsCiAgICAgICAgICAgICAgICAgICAgICAiX3R5cGUiOiAiRUxFTUVOVCIsCiAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogIkRvc2UiCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogewogICAgICAgICAgICAgICAgICAgICAgICAiX3R5cGUiOiAiRFZfVEVYVCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJEVSIKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJfYXJjaGV0eXBlX25vZGVfaWQiOiAiYXQwMTQwIiwKICAgICAgICAgICAgICAgICJfdHlwZSI6ICJDTFVTVEVSIiwKICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAidmFsdWUiOiAiRGV0YWxoZXMgZGEgYWRtaW5pc3RyYcOnw6NvIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJpdGVtcyI6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJfYXJjaGV0eXBlX25vZGVfaWQiOiAiYXQwMTQ3IiwKICAgICAgICAgICAgICAgICAgICAiX3R5cGUiOiAiRUxFTUVOVCIsCiAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiVmlhIGRlIGFkbWluaXN0cmHDp8OjbyIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICJfdHlwZSI6ICJEVl9URVhUIiwKICAgICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJFbmRvdmVub3NhIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJfYXJjaGV0eXBlX25vZGVfaWQiOiAiYXQwMTQxIiwKICAgICAgICAgICAgICAgICAgICAiX3R5cGUiOiAiRUxFTUVOVCIsCiAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiTG9jYWwgZGUgYXBsaWNhw6fDo28iCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAiX3R5cGUiOiAiRFZfVEVYVCIsCiAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiUmVkZSB2ZW5vc2EiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdCiAgICAgICAgICB9LAogICAgICAgICAgImlzbV90cmFuc2l0aW9uIjogewogICAgICAgICAgICAiY3VycmVudF9zdGF0ZSI6IHsKICAgICAgICAgICAgICAidmFsdWUiOiAicGxhbm5lZCIsCiAgICAgICAgICAgICAgImRlZmluaW5nX2NvZGUiOiB7CiAgICAgICAgICAgICAgICAidGVybWlub2xvZ3lfaWQiOiB7CiAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJvcGVuZWhyIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJjb2RlX3N0cmluZyI6ICI1MjYiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAiY2FyZWZsb3dfc3RlcCI6IHsKICAgICAgICAgICAgICAidmFsdWUiOiAiTWVkaWNhbWVudG8gcmVjb21lbmRhZG8iLAogICAgICAgICAgICAgICJkZWZpbmluZ19jb2RlIjogewogICAgICAgICAgICAgICAgInRlcm1pbm9sb2d5X2lkIjogewogICAgICAgICAgICAgICAgICAidmFsdWUiOiAibG9jYWwiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgImNvZGVfc3RyaW5nIjogImF0MDEwOSIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJfYXJjaGV0eXBlX25vZGVfaWQiOiAib3BlbkVIUi1FSFItRVZBTFVBVElPTi5pbW11bmlzYXRpb25fc3VtbWFyeS1tc19ici52MSIsCiAgICAgICAgICAiX3R5cGUiOiAiRVZBTFVBVElPTiIsCiAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgInZhbHVlIjogIlN1bcOhcmlvIGRlIEltdW5pemHDp8OjbyIKICAgICAgICAgIH0sCiAgICAgICAgICAiYXJjaGV0eXBlX2RldGFpbHMiOiB7CiAgICAgICAgICAgICJhcmNoZXR5cGVfaWQiOiB7CiAgICAgICAgICAgICAgInZhbHVlIjogIm9wZW5FSFItRUhSLUVWQUxVQVRJT04uaW1tdW5pc2F0aW9uX3N1bW1hcnktbXNfYnIudjEiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJybV92ZXJzaW9uIjogIjEuMC4xIgogICAgICAgICAgfSwKICAgICAgICAgICJsYW5ndWFnZSI6IHsKICAgICAgICAgICAgInRlcm1pbm9sb2d5X2lkIjogewogICAgICAgICAgICAgICJ2YWx1ZSI6ICJJU09fNjM5LTEiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJjb2RlX3N0cmluZyI6ICJlbiIKICAgICAgICAgIH0sCiAgICAgICAgICAiZW5jb2RpbmciOiB7CiAgICAgICAgICAgICJ0ZXJtaW5vbG9neV9pZCI6IHsKICAgICAgICAgICAgICAidmFsdWUiOiAiSUFOQV9jaGFyYWN0ZXItc2V0cyIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImNvZGVfc3RyaW5nIjogIlVURi04IgogICAgICAgICAgfSwKICAgICAgICAgICJzdWJqZWN0IjogewogICAgICAgICAgICAiX3R5cGUiOiAiUEFSVFlfU0VMRiIKICAgICAgICAgIH0sCiAgICAgICAgICAiZGF0YSI6IHsKICAgICAgICAgICAgIl9hcmNoZXR5cGVfbm9kZV9pZCI6ICJhdDAwMDEiLAogICAgICAgICAgICAiX3R5cGUiOiAiSVRFTV9UUkVFIiwKICAgICAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAgICAgInZhbHVlIjogIsOBcnZvcmUiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJpdGVtcyI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiX2FyY2hldHlwZV9ub2RlX2lkIjogImF0MDAxNiIsCiAgICAgICAgICAgICAgICAiX3R5cGUiOiAiQ0xVU1RFUiIsCiAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgInZhbHVlIjogIlZhY2luYSBlc3BlY8OtZmljYSIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiaXRlbXMiOiB7CiAgICAgICAgICAgICAgICAgICJfYXJjaGV0eXBlX25vZGVfaWQiOiAiYXQwMDA4IiwKICAgICAgICAgICAgICAgICAgIl90eXBlIjogIkVMRU1FTlQiLAogICAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiRGF0YSBkYSBhZG1pbmlzdHJhw6fDo28iCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6IHsKICAgICAgICAgICAgICAgICAgICAiX3R5cGUiOiAiRFZfREFURV9USU1FIiwKICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAiMjAxOS0wOS0xM1QwMDowMDowMFoiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJfYXJjaGV0eXBlX25vZGVfaWQiOiAiYXQwLjI2IiwKICAgICAgICAgICAgICAgICJfdHlwZSI6ICJFTEVNRU5UIiwKICAgICAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICAgICAidmFsdWUiOiAiRXN0cmF0w6lnaWEiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgInZhbHVlIjogewogICAgICAgICAgICAgICAgICAiX3R5cGUiOiAiRFZfQ09ERURfVEVYVCIsCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICJyb3RpbmEiLAogICAgICAgICAgICAgICAgICAiZGVmaW5pbmdfY29kZSI6IHsKICAgICAgICAgICAgICAgICAgICAidGVybWlub2xvZ3lfaWQiOiB7CiAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAibG9jYWwiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAiY29kZV9zdHJpbmciOiAiYXQwLjQ4IgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiX2FyY2hldHlwZV9ub2RlX2lkIjogImF0MC40MCIsCiAgICAgICAgICAgICAgICAiX3R5cGUiOiAiRUxFTUVOVCIsCiAgICAgICAgICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICAgICAgICAgInZhbHVlIjogIlNpdHVhw6fDo28vY29uZGnDp8OjbyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAidmFsdWUiOiB7CiAgICAgICAgICAgICAgICAgICJfdHlwZSI6ICJEVl9URVhUIiwKICAgICAgICAgICAgICAgICAgInZhbHVlIjogIkdlc3RhbnRlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfQogIF0KfQo=";

}
